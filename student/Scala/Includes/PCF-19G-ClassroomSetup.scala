{"commands": [{"bindings": {}, "collapsed": false, "command": "\n%run ./Classroom-Setup", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "2a99a92d-4d6c-42cd-8daf-a8e6d2705476", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "6de1ac4a-210f-44f6-8af8-ec348e4e8754", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 1, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "val clickstreamFolder = financeDataPath + \"/click_stream/click_stream.json\"\ncourseAdvertisements(\"clickstreamFolder\") = (\"v\", clickstreamFolder , clickstreamFolder)\n\nval clickstreamSchema = spark.read.json(financeDataPath + \"/click_stream//click_stream.json/09-20.json\").schema\n\ndef realityCheck(testMethod:(org.apache.spark.sql.SparkSession, String, org.apache.spark.sql.types.StructType) => DataFrame, spark:org.apache.spark.sql.SparkSession, clickstreamFolder:String, clickstreamSchema:org.apache.spark.sql.types.StructType): Unit = {\n  import org.apache.spark.sql.functions._\n  import org.apache.spark.sql.types._\n  import java.io.ByteArrayOutputStream\n  // Set shuffle.partitions to 200 by default as students need to change this\nspark.conf.set(\"spark.sql.shuffle.partitions\", 200)\n\n  val resultDF = testMethod(spark, clickstreamFolder, clickstreamSchema)\n  \n  val correctDF = (spark.readStream.schema(clickstreamSchema).format(\"json\")\n                .option(\"path\", clickstreamFolder)\n                .option(\"maxFilesPerTrigger\",1)\n                .load()\n                .select(from_unixtime(col(\"order_timestamp\")/1000).alias(\"ts\"), size(col(\"clicked_items\")).alias(\"click_count\"))\n                .filter(col(\"ts\").isNotNull)\n                .groupBy(window(col(\"ts\"), \"5 minutes\", \"5 seconds\")).sum(\"click_count\")\n                .select(col(\"window.start\").alias(\"ts\"), col(\"sum(click_count)\").alias(\"click_count\"))\n                .orderBy(\"ts\")\n                   )\n\n  \n  val tests = new TestSuite()\n  tests.addTest(TestCase(id=\"PCF-22G-A\", description=\"Spark SQL Shuffle Partitions set to 8\",\n           testFunction = () => spark.conf.get(\"spark.sql.shuffle.partitions\") == \"8\"))\n  tests.addTest(TestCase(id=\"PCF-22G-B\", description=\"Returns Streaming DataFrame\",     \n           testFunction = () => resultDF.isStreaming))\n  tests.addTest(TestCase(id=\"PCF-22G-C\", description=\"Returns correct schema\",\n           testFunction = () => compareSchemas(resultDF.schema, correctDF.schema, testColumnOrder=false, testNullable=true)))\n  \n  \n  tests.displayResults()\n\n}\nallDone(courseAdvertisements)\n", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "0b47b2c5-03e6-42e3-abb1-14eb0560ccdf", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "99d8e733-efc4-4a7f-8cb5-ba796d079208", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 2, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}], "dashboards": [], "globalVars": {}, "guid": "186b19ed-03e7-4415-a32e-3d0b60ca53af", "iPythonMetadata": null, "inputWidgets": {}, "language": "scala", "name": "PCF-19G-ClassroomSetup", "origId": 0, "version": "NotebookV1"}