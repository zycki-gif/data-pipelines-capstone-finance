{"commands": [{"bindings": {}, "collapsed": false, "command": "\n%run ./Classroom-Setup", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "4550579c-4967-4604-b025-d033a2898c92", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "34c49ce6-f304-40e4-8c31-716f6854c33d", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 1, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "assetsPath = financeDataPath + \"/assets/assets.csv\"\ncourseAdvertisements[\"assetsPath\"] = (\"v\", assetsPath , assetsPath)\n\ntargetDirectory = workingDir + \"/assets.delta\"\ncourseAdvertisements[\"targetDirectory\"] = (\"v\", targetDirectory , targetDirectory)\n\nallDone(courseAdvertisements)", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "d2ed257d-2fcd-4db2-9a6b-fb49d7ebb3f2", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "ab7863e6-52d9-49f4-b12b-37e20e0cc13a", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 2, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "# SETUP\n\ndef realityCheck(testMethod, spark, assetsPathPath, targetDirectory):\n  from contextlib import redirect_stdout\n  from io import StringIO\n  from pyspark.sql.functions import col\n  from pyspark.sql.types import IntegerType\n  \n  dumpOutput = StringIO()\n  with redirect_stdout(dumpOutput):\n    resultDF = testMethod(spark, assetsPathPath, targetDirectory)\n\n    assetsRawDF = (spark.read\n                     .option(\"header\", True)\n                     .option(\"inferSchema\", True)\n                     .option(\"nullValue\", \"na\")\n                     .csv(assetsPath))\n    \n    correctDF = (assetsRawDF\n               .withColumn(\"ASSET_ID\", col(\"ASSET_ID\").cast(IntegerType()))\n               .withColumnRenamed(\"ASSET_ID\", \"asset_id\")\n               .withColumn(\"PRODUCT_ID\", col(\"PRODUCT_ID\").cast(IntegerType()))\n               .withColumnRenamed(\"PRODUCT_ID\", \"product_id\"))\n\n    updateSourceDataInDevMode(correctDF, \"bronze/assets\")\n    \n  def read_delta():\n    try:\n      return spark.read.format(\"delta\").load(targetDirectory)\n    except Exception:\n      return None\n  \n  deltaTable = read_delta()\n\n  tests = TestSuite()\n\n  tests.addTest(TestCase(id=\"PCF-02-A\", description = \"Returns correct schema\", \n           testFunction = lambda: compareSchemas(resultDF.schema, correctDF.schema, testColumnOrder=False, testNullable=False))),\n  tests.addTest(TestCase(id=\"PCF-02-B\", description = \"Returns DataFrame with correct number of rows\", \n           testFunction = lambda: resultDF.count() == correctDF.count())),\n  tests.addTest(TestCase(id=\"PCF-02-C\", description = \"Returns DataFrame without \\\"na\\\" values\",     \n           testFunction = lambda: resultDF.count() > 0 and resultDF\n           .filter((col(\"valid_to\") == \"nan\")).count() == 0)),\n  tests.addTest(TestCase(id=\"PCF-02-D\", description = \"Returns DataFrame with correct results\", \n           testFunction = lambda: compareDataFramesLimited(resultDF, correctDF))),\n  tests.addTest(TestCase(id=\"PCF-02-E\", description = \"Delta table in place\",\n           testFunction = lambda: deltaTable is not None)),\n  tests.addTest(TestCase(id=\"PCF-02-F\", description = \"Delta table has correct content\",\n           testFunction = lambda: compareDataFramesLimited(deltaTable, correctDF)))\n  \n  tests.displayResults()\n\ndisplayHTML(\"\"\"\nDeclared the following function:\n  <li><span style=\"color:green; font-weight:bold\">realityCheck</span></li>\n\"\"\")", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "ae13814d-3625-47e4-99e3-494f4159fbeb", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "34eae2d3-c6b5-4434-a31d-1efd00dac4f8", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 3, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "displayHTML(\"All done!\")\n", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "471e9d9b-26dc-4f5f-a003-9cc3fcccaf2f", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "f20266d2-c032-4c21-8921-e10d96ca08d3", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 4, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}], "dashboards": [], "globalVars": {}, "guid": "6ac9e211-570d-4808-8a38-57c195ad58c4", "iPythonMetadata": null, "inputWidgets": {}, "language": "python", "name": "PCF-02B-ClassroomSetup", "origId": 0, "version": "NotebookV1"}