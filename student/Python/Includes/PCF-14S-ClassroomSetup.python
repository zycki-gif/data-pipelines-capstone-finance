{"commands": [{"bindings": {}, "collapsed": false, "command": "\n%run ./Classroom-Setup", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "e5789df3-8aeb-4c4a-a53b-d453d3ce24ab", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "76ae52e8-549e-41c1-b051-88dfcb745119", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 1, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "silverStockOrdersPath = sourceDataPath + \"/silver/stock_orders\"\ncourseAdvertisements[\"silverStockOrdersPath\"] = (\"v\", silverStockOrdersPath , silverStockOrdersPath)\n\ntargetDirectory = workingDir + \"/silver/stock_order_daily_metrics\"\ncourseAdvertisements[\"targetDirectory\"] = (\"v\", targetDirectory , targetDirectory)\n\nallDone(courseAdvertisements)", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "a1eb5940-96dd-40ec-9db0-95033419066d", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "0171a8a0-33d3-4d57-97d0-31dc0a67afbe", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 2, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "# SETUP\n\ndef realityCheck(testMethod, spark, silverStockOrdersPath, targetDirectory):\n  from pyspark.sql.window import Window\n  from pyspark.sql.functions import min, max, avg, col, round\n  from contextlib import redirect_stdout\n  from io import StringIO\n  \n  dumpOutput = StringIO()\n  with redirect_stdout(dumpOutput):\n    resultDF = testMethod(spark, silverStockOrdersPath, targetDirectory)\n    \n    correctDF = (spark.read.format(\"delta\").load(silverStockOrdersPath)\n                         .select(\"order_timestamp\", \"ticker\", \"price\")\n                         .withColumn(\"date\", col(\"order_timestamp\").cast(\"date\"))\n                         .groupBy(\"date\", \"ticker\")\n                         .agg(round(min(col(\"price\")), 2).alias(\"low\"),\n                              round(max(col(\"price\")), 2).alias(\"high\"), \n                              round(avg(col(\"price\")), 2).alias(\"average\")\n                             )\n                         .orderBy(\"date\",\"ticker\")\n                         )\n    \n    updateSourceDataInDevMode(correctDF, \"silver/stock_order_daily_metrics\")\n \n  def read_delta():\n    try:\n      return spark.read.format(\"delta\").load(targetDirectory)\n    except Exception:\n      return None\n  \n  deltaTable = read_delta()\n\n  tests = TestSuite()\n  tests.addTest(TestCase(id=\"PCF-14S-A\", description = \"Returns correct schema\", \n           testFunction = lambda: compareSchemas(resultDF.schema, correctDF.schema, testColumnOrder=False, testNullable=True))),\n  tests.addTest(TestCase(id=\"PCF-14S-B\", description = \"Returns DataFrame with correct number of rows\",              \n           testFunction = lambda: resultDF.count() == correctDF.count())),\n  tests.addTest(TestCase(id=\"PCF-14S-C\", description = \"Returns DataFrame with correct results\", \n           testFunction = lambda: compareDataFramesLimited(resultDF.drop('date'), correctDF.drop('date')))),  # Dropping order_timestamp as it uses the current_timestamp function, which is changing\n  tests.addTest(TestCase(id=\"PCF-14S-D\", description = \"Silver table in place\",\n           testFunction = lambda: deltaTable is not None)),\n  tests.addTest(TestCase(id=\"PCF-14S-E\", description = \"Silver table has correct content\",\n           testFunction = lambda: compareDataFramesLimited(deltaTable.drop(\"date\"), correctDF.drop(\"date\"))))  # Dropping order_timestamp as it uses the current_timestamp function, which is changing\n\n  \n  tests.displayResults()\n\ndisplayHTML(\"\"\"\nDeclared the following function:\n  <li><span style=\"color:green; font-weight:bold\">realityCheck</span></li>\n\"\"\")", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "21398798-b493-4c70-8e0b-81d30b286e10", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "fb3f5bad-8a82-47b7-a4f1-690b7fa40d7d", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 3, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "displayHTML(\"All done!\")\n", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "2f9f405d-3025-45f0-9694-ec17152104be", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "00ce6f44-8238-434a-b476-fdf11b23844a", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 4, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}], "dashboards": [], "globalVars": {}, "guid": "099b96cb-375f-4816-8ef5-423be1e94faa", "iPythonMetadata": null, "inputWidgets": {}, "language": "python", "name": "PCF-14S-ClassroomSetup", "origId": 0, "version": "NotebookV1"}