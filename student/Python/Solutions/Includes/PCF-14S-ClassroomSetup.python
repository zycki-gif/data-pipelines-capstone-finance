{"commands": [{"bindings": {}, "collapsed": false, "command": "\n%run ./Classroom-Setup", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "e61ffefe-c8c4-4abe-8bb6-69cc6f92f1ec", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "84fd6e5c-c446-4900-8645-126f7c09f670", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 1, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "silverStockOrdersPath = sourceDataPath + \"/silver/stock_orders\"\ncourseAdvertisements[\"silverStockOrdersPath\"] = (\"v\", silverStockOrdersPath , silverStockOrdersPath)\n\ntargetDirectory = workingDir + \"/silver/stock_order_daily_metrics\"\ncourseAdvertisements[\"targetDirectory\"] = (\"v\", targetDirectory , targetDirectory)\n\nallDone(courseAdvertisements)", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "53dc6b1d-0176-4cdc-8e23-8653dd3cfca9", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "27dbbd16-f6f6-42e0-9844-160b441030f7", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 2, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "# SETUP\n\ndef realityCheck(testMethod, spark, silverStockOrdersPath, targetDirectory):\n  from pyspark.sql.window import Window\n  from pyspark.sql.functions import min, max, avg, col, round\n  from contextlib import redirect_stdout\n  from io import StringIO\n  \n  dumpOutput = StringIO()\n  with redirect_stdout(dumpOutput):\n    resultDF = testMethod(spark, silverStockOrdersPath, targetDirectory)\n    \n    correctDF = (spark.read.format(\"delta\").load(silverStockOrdersPath)\n                         .select(\"order_timestamp\", \"ticker\", \"price\")\n                         .withColumn(\"date\", col(\"order_timestamp\").cast(\"date\"))\n                         .groupBy(\"date\", \"ticker\")\n                         .agg(round(min(col(\"price\")), 2).alias(\"low\"),\n                              round(max(col(\"price\")), 2).alias(\"high\"), \n                              round(avg(col(\"price\")), 2).alias(\"average\")\n                             )\n                         .orderBy(\"date\",\"ticker\")\n                         )\n    \n    updateSourceDataInDevMode(correctDF, \"silver/stock_order_daily_metrics\")\n \n  def read_delta():\n    try:\n      return spark.read.format(\"delta\").load(targetDirectory)\n    except Exception:\n      return None\n  \n  deltaTable = read_delta()\n\n  tests = TestSuite()\n  tests.addTest(TestCase(id=\"PCF-14S-A\", description = \"Returns correct schema\", \n           testFunction = lambda: compareSchemas(resultDF.schema, correctDF.schema, testColumnOrder=False, testNullable=True))),\n  tests.addTest(TestCase(id=\"PCF-14S-B\", description = \"Returns DataFrame with correct number of rows\",              \n           testFunction = lambda: resultDF.count() == correctDF.count())),\n  tests.addTest(TestCase(id=\"PCF-14S-C\", description = \"Returns DataFrame with correct results\", \n           testFunction = lambda: compareDataFramesLimited(resultDF.drop('date'), correctDF.drop('date')))),  # Dropping order_timestamp as it uses the current_timestamp function, which is changing\n  tests.addTest(TestCase(id=\"PCF-14S-D\", description = \"Silver table in place\",\n           testFunction = lambda: deltaTable is not None)),\n  tests.addTest(TestCase(id=\"PCF-14S-E\", description = \"Silver table has correct content\",\n           testFunction = lambda: compareDataFramesLimited(deltaTable.drop(\"date\"), correctDF.drop(\"date\"))))  # Dropping order_timestamp as it uses the current_timestamp function, which is changing\n\n  \n  tests.displayResults()\n\ndisplayHTML(\"\"\"\nDeclared the following function:\n  <li><span style=\"color:green; font-weight:bold\">realityCheck</span></li>\n\"\"\")", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "587232f6-c081-4e1d-a575-c78f44fda728", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "704ed566-73ad-4acd-a7a1-9b20709de514", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 3, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "displayHTML(\"All done!\")\n", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "013c1c03-029c-4f0f-83fa-fd0edc5c09fb", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "8d2f969a-f0e3-40b2-aa03-c70d31e29ee0", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 4, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}], "dashboards": [], "globalVars": {}, "guid": "1b312785-7fdc-4ce4-937f-3ab091a441b3", "iPythonMetadata": null, "inputWidgets": {}, "language": "python", "name": "PCF-14S-ClassroomSetup", "origId": 0, "version": "NotebookV1"}