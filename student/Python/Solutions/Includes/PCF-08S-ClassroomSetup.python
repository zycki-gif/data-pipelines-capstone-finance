{"commands": [{"bindings": {}, "collapsed": false, "command": "\n%run ./Classroom-Setup", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "41e902bc-492a-4584-aafb-9499d17de805", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "8b729d88-8bc2-44bf-9ade-605d17fef381", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 1, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "assetsPath = sourceDataPath + \"/bronze/assets\"\ncourseAdvertisements[\"assetsPath\"] = (\"v\", assetsPath , assetsPath)\n\ninvestorsPath = sourceDataPath + \"/silver/investors\"\ncourseAdvertisements[\"investorsPath\"] = (\"v\", investorsPath , investorsPath)\n\ntargetDirectory = workingDir + \"/silver/investor_favorites\"\ncourseAdvertisements[\"targetDirectory\"] = (\"v\", targetDirectory , targetDirectory)\n\nallDone(courseAdvertisements)", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "7c8ce9e0-a214-4225-8f5b-feb8d6de0bcb", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "3b3ff443-d556-46e3-8889-fbb31dc0e686", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 2, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "# SETUP\n\ndef realityCheck(testMethod, spark, investorsPath, assetsPath, targetDirectory):\n  from contextlib import redirect_stdout\n  from io import StringIO\n  from pyspark.sql.functions import col, split, explode\n  \n  dumpOutput = StringIO()\n  with redirect_stdout(dumpOutput):\n    resultDF = testMethod(spark, investorsPath, assetsPath, targetDirectory)\n\n    investorsDF = (spark.read.format(\"delta\").load(investorsPath)\n                  .select(\"investor_id\", \"name\", \"credit_score\", \"risk_score\", \"fav_stocks\")\n                  )\n\n    exp = (investorsDF\n           .withColumn('fav_stocks', split(col('fav_stocks'), \",\"))\n           .select(\"*\", explode(\"fav_stocks\").alias(\"asset_id\")).drop(\"fav_stocks\")\n          )\n\n    assets = spark.read.format(\"delta\").load(assetsPath)\n\n    correctDF = exp.join(assets, on=\"asset_id\", how=\"left\").select(exp[\"*\"], \"asset_risk\")\n    \n    updateSourceDataInDevMode(correctDF, \"silver/investor_favorites\")\n \n  def read_delta():\n    try:\n      return spark.read.format(\"delta\").load(targetDirectory)\n    except Exception:\n      return None\n  \n  deltaTable = read_delta()\n\n  tests = TestSuite()\n  tests.addTest(TestCase(id=\"PCF-10S-A\", description = \"Returns correct schema\", \n           testFunction = lambda: compareSchemas(resultDF.schema, correctDF.schema, testColumnOrder=False, testNullable=False))),\n  tests.addTest(TestCase(id=\"PCF-10S-B\", description = \"Returns DataFrame with correct number of rows\",              \n           testFunction = lambda: resultDF.count() == correctDF.count())),\n  tests.addTest(TestCase(id=\"PCF-10S-C\", description = \"Returns DataFrame with correct results\", \n           testFunction = lambda: compareDataFrames(resultDF, correctDF, testColumnOrder=False, testNullable=False))),\n  tests.addTest(TestCase(id=\"PCF-10S-D\", description = \"Silver table in place\",\n           testFunction = lambda: deltaTable is not None)),\n  tests.addTest(TestCase(id=\"PCF-10S-E\", description = \"Silver table has correct content\",\n           testFunction = lambda: compareDataFrames(deltaTable, correctDF, testColumnOrder=False, testNullable=False)))\n\n\n  tests.displayResults()  \n  \ndisplayHTML(\"\"\"\nDeclared the following function:\n  <li><span style=\"color:green; font-weight:bold\">realityCheck</span></li>\n\"\"\")\n", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "7d33f1a0-c502-4d5e-86ca-c1f9afab62a2", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "2f561d01-1ece-4415-9736-cae237010f50", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 3, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}], "dashboards": [], "globalVars": {}, "guid": "3240908e-8782-43f9-9063-da2bdfe373b9", "iPythonMetadata": null, "inputWidgets": {}, "language": "python", "name": "PCF-08S-ClassroomSetup", "origId": 0, "version": "NotebookV1"}