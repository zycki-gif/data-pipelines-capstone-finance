{"commands": [{"bindings": {}, "collapsed": false, "command": "\n%run ./Classroom-Setup", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "6926a45c-5eb9-4e33-af9e-2a740cd41b39", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "394fb7f4-edfe-4229-a106-56c0394fd1b7", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 1, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "loanRequestsPath = financeDataPath + \"/loan_requests/loan_requests.xml\"\ncourseAdvertisements[\"loanRequestsPath\"] = (\"v\", loanRequestsPath , loanRequestsPath)\n\ntargetDirectory = workingDir + \"/loan_requests.delta\"\ncourseAdvertisements[\"targetDirectory\"] = (\"v\", targetDirectory , targetDirectory)\n\nallDone(courseAdvertisements)", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "35112de2-bcfa-4536-94ec-bb850778c576", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "719e2e91-5ad6-49b0-840e-e5ff040b613e", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 2, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "# SETUP\n\ndef realityCheck(testMethod, spark, loanRequestsPath, targetDirectory):\n  from contextlib import redirect_stdout\n  from io import StringIO\n  from pyspark.sql.functions import col\n  \n  dumpOutput = StringIO()\n  with redirect_stdout(dumpOutput):\n    \n    resultDF = testMethod(spark, loanRequestsPath, targetDirectory)\n    \n    correctDF = (spark.read\n      .format(\"xml\")\n      .option(\"rootTag\", \"loans\")\n      .option(\"rowTag\", \"loan_request\") \n      .option(\"inferSchema\", \"True\")\n      .load(loanRequestsPath) \n     )\n    \n    \n    updateSourceDataInDevMode(correctDF, \"bronze/loan_requests\")\n    \n  def read_delta():\n    try:\n      return spark.read.format(\"delta\").load(targetDirectory)\n    except Exception:\n      return None\n  \n  deltaTable = read_delta()\n\n  tests = TestSuite()\n\n  tests.addTest(TestCase(id=\"PCF-04B-A\", description = \"Returns correct schema\", \n             testFunction = lambda: compareSchemas(resultDF.schema, correctDF.schema, testColumnOrder=False, testNullable=False)))\n  tests.addTest(TestCase(id=\"PCF-04B-B\", description = \"Returns DataFrame with correct number of rows\",              \n             testFunction = lambda: resultDF.count() == correctDF.count()))\n  tests.addTest(TestCase(id=\"PCF-04B-C\", description = \"Returns DataFrame with correct results\", \n             testFunction = lambda: compareDataFramesLimited(resultDF, correctDF)))\n  tests.addTest(TestCase(id=\"PCF-04B-D\", description = \"Delta Table in place\",\n             testFunction = lambda: deltaTable is not None))\n  tests.addTest(TestCase(id=\"PCF-04B-E\", description = \"Delta Table has correct contents\",\n             testFunction = lambda: compareDataFramesLimited(deltaTable, correctDF)))\n  \n  tests.displayResults()\n  \ndisplayHTML(\"\"\"\nDeclared the following function:\n  <li><span style=\"color:green; font-weight:bold\">realityCheck</span></li>\n\"\"\")", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "d32399c1-6908-4d56-98e2-8bf798419dc6", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "a8a3ad63-e9b7-4eb3-9969-bd358bef122f", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 3, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "displayHTML(\"All done!\")\n", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "9a56c7f2-2caa-4f22-8406-19ca517fea29", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "3326f28d-f80c-420b-9181-479246002c90", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 4, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}], "dashboards": [], "globalVars": {}, "guid": "63086465-9fac-4e42-8bd8-b03e1b7cbc19", "iPythonMetadata": null, "inputWidgets": {}, "language": "python", "name": "PCF-04B-ClassroomSetup", "origId": 0, "version": "NotebookV1"}