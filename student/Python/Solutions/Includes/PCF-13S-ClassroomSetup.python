{"commands": [{"bindings": {}, "collapsed": false, "command": "\n%run ./Classroom-Setup", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "fdf8fe5b-24aa-435d-8af6-9b89ee89a196", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "4a904a6c-2481-478d-a85b-db8a9c7d1368", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 1, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "silverStockOrdersPath = sourceDataPath +\"/silver/stock_orders\"\ncourseAdvertisements[\"silverStockOrdersPath\"] = (\"v\", silverStockOrdersPath , silverStockOrdersPath)\n\ntargetDirectory = workingDir + \"/silver/clicked_tickers\" \ncourseAdvertisements[\"targetDirectory\"] = (\"v\", targetDirectory , targetDirectory)\n\nallDone(courseAdvertisements)  ", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "0fe2b1bb-8df6-4bca-a4f2-45a5e279e932", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "076c0c57-6723-4628-9451-9dcf2906e9f3", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 2, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "# SETUP\n\ndef realityCheck(testMethod, spark, silverStockOrdersPath, targetDirectory):\n  from contextlib import redirect_stdout\n  from io import StringIO\n  from pyspark.sql.functions import col, explode\n  from pyspark.sql.types import IntegerType\n  \n  dumpOutput = StringIO()\n  with redirect_stdout(dumpOutput):\n    \n    resultDF = testMethod(spark, silverStockOrdersPath, targetDirectory)\n    \n    click_base = (spark.read.format(\"delta\").load(silverStockOrdersPath)\n                 .select(\"transaction_id\", \"investor\", \"dow\", \"clicked_items\")\n                 )\n\n    def time_spent(l):\n      times = [int(c[1]) for c in l]\n      return __builtins__.sum(times)\n\n    time_spent_udf = udf(time_spent, IntegerType())\n\n    click_base = click_base.withColumn(\"time_spent_on_site\", time_spent_udf(col(\"clicked_items\")))\n\n    correctDF = (click_base\n               .withColumn(\"clicked_item\", explode(\"clicked_items\"))\n               .selectExpr(\"*\", \n                           \"clicked_item[0] AS ticker_clicked\", \n                           \"CAST(clicked_item[1] AS int) AS time_spent_on_ticker\")\n               .drop(\"clicked_items\", \"clicked_item\")\n              )\n    \n    updateSourceDataInDevMode(correctDF, \"silver/clicked_tickers\")\n \n  def read_delta():\n    try:\n      return spark.read.format(\"delta\").load(targetDirectory)\n    except Exception:\n      return None\n  \n  deltaTable = read_delta()\n  \n\n  tests = TestSuite()\n  tests.addTest(TestCase(id=\"PCF-16S-A\", description = \"Returns correct schema\", \n           testFunction = lambda: compareSchemas(resultDF.schema, correctDF.schema, testColumnOrder=False, testNullable=True))),\n  tests.addTest(TestCase(id=\"PCF-16S-B\", description = \"Returns DataFrame with correct number of rows\",              \n           testFunction = lambda: resultDF.count() == correctDF.count())),\n  tests.addTest(TestCase(id=\"PCF-16S-C\", description = \"Returns DataFrame with correct results\", \n           testFunction = lambda: compareDataFramesLimited(resultDF.drop('order_timestamp'), correctDF.drop('order_timestamp')))),\n  tests.addTest(TestCase(id=\"PCF-16S-D\", description = \"Delta table in place\",\n           testFunction = lambda: deltaTable is not None)),\n  tests.addTest(TestCase(id=\"PCF-16S-E\", description = \"Delta table has correct content\",\n           testFunction = lambda: compareDataFramesLimited(deltaTable, correctDF,)))  \n  \n  tests.displayResults()\n  \ndisplayHTML(\"\"\"\nDeclared the following function:\n  <li><span style=\"color:green; font-weight:bold\">realityCheck</span></li>\n\"\"\")\n", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "f80da467-d582-4240-99b6-24c37d0d3ee6", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "cf511fbf-359f-4c17-be29-81f298a9bb09", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 3, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}], "dashboards": [], "globalVars": {}, "guid": "80c967af-9a25-4fa9-b67c-a2ee3286c4f0", "iPythonMetadata": null, "inputWidgets": {}, "language": "python", "name": "PCF-13S-ClassroomSetup", "origId": 0, "version": "NotebookV1"}