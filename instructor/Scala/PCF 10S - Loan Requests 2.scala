{"commands": [{"bindings": {}, "collapsed": false, "command": "\n%md-sandbox\n\n<div style=\"text-align: center; line-height: 0; padding-top: 9px;\">\n  <img src=\"https://databricks.com/wp-content/uploads/2018/03/db-academy-rgb-1200px.png\" alt=\"Databricks Learning\" style=\"width: 1200px\">\n</div>", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "fcc1d6b2-265f-4131-ad07-a401973a34b8", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "c57abe96-496b-4f40-a911-dbcf6dc34623", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 1, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%md-sandbox\n<img src=\"https://files.training.databricks.com/images/Apache-Spark-Logo_TM_200px.png\" style=\"float: left: margin: 20px\"/>\n\n# Bronze To Silver - Loan Requests 2\n\nLet's standardize the **`request_amount`** format in Purchase Orders and write two DataFrames to two different paths: one for loan requests without any problems and another for loan requests with missing amounts or blacklisted inverstors in need of manual checks  executed by our staff.\n\n\n## In this exercise you will:\n* Learn about User Defined Functions (UDFs)\n* Practice using performant built-in functions\n* Practice using filters with OR predicate\n* Practice using regular expressions \n\n## Prerequisites\n* Web browser: **Chrome**\n* A cluster configured with **8 cores** and **DBR 7.0**", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "d46ab19b-49a4-4b40-966f-76d2c592d54f", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "067a6a6b-0a99-4153-b7c9-442219c7cd24", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 2, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%md-sandbox\n<h2 style=\"color:red\">Instructor Note</h2>\n\n\n\nThings to talk about:\n- talk about the goal:\n  - what are we building right now: standardizing values in loan requests table and separating rows for manual checking\n  - why is it useful: sometimes losing rows is not feasable; we'll use the manually fixed data later on\n- describe how udfs are executed\n- emphasize the importance of using built-in functions\n- compare built-in and udf solutions\n- talk about when to use udfs", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "740fe430-30f0-44a2-916b-b8e50042c4c0", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "25f98273-31ea-4b7a-b1fb-9e454ed51f9b", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 3, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%md\n## ![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Classroom-Setup<br>\n\nFor each lesson to execute correctly, please make sure to run the **`Classroom-Setup`** cell at the start of each lesson (see the next cell) and the **`Classroom-Cleanup`** cell at the end of each lesson.", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "4e317e32-9b3f-449a-a584-8c93da7129c9", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "1e6dd227-b77f-402a-a6ee-ce971920967b", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 4, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%run ./Includes/PCF-10S-ClassroomSetup", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "9696745d-ada8-4b19-a95f-ae0183e743dd", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "948de2a6-15f8-44e0-9934-36098d89e186", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 5, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%md\n\n## ![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Steps to complete<br>\nImplement the **`challenge()`** function to achieve the following:\n\n- Read Loan Requests from **`silverLoanRequestsPath`** into a DataFrame.\n- Create a function which extracts the currency string from **`request_amount`** and converts `$` to `USD`.\n- Register this function as a UDF and call it **`get_currency_udf`**.\n- Now that you implemented a UDF, let's see if we can achieve the same with built-in functions. Create a new DataFrame where you use the built-in functions for extracting both the **`currency`** and the **`amount`** from the **`request_amount`** column: call these new columns **`currency`** and **`amount`**.\n- Drop the **`request_amount`** column when you are done with the extractions.\n- Create a new DataFrame called **`finalOK`**, which contains those values where the **`missing_amount`** and the **`banned_investor`** columns are false.\n- Save finalOK as a Delta table to **`targetDirectory`**.\n- Create a new DataFrame called **`finalCheck`** containing those values where either the **`missing_amount`** or the **`banned_investor`** columns are true.\n- Save finalCheck as a Delta table to **`manualCheckPath`**.\n- Return the UDF, finalOK and finalCheck as an output of the function.\n\n<p> The resulting DataFrame's expected schema is:\n  \n|name|type|\n|---|---|\n|investor_id|LongType|\n|loan_id|LongType|\n|product_id|LongType|\n|request_length|LongType|\n|request_time|TimestampType|\n|valid_to|TimestampType|\n|password_hash|StringType|\n|missing_amount|BooleanType|\n|banned_investor|BooleanType|\n|loan_alert|StringType|\n|currency|StringType|\n|amount|IntegerType|", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "1131dd9d-333b-43cb-905e-3382f1f3e62b", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "7a58287b-d4df-412e-9faf-370566cab325", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 6, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "// ANSWER\n\ndef solution(spark:org.apache.spark.sql.SparkSession, silverLoanRequestsPath:String, manualCheckPath:String, targetDirectory:String) : (org.apache.spark.sql.expressions.UserDefinedFunction, DataFrame, DataFrame) = {\n  import org.apache.spark.sql.functions._\n  \n  // Read the Purchase Orders from `silverLoanRequestsPath`.\n  val res = spark.read.format(\"delta\").load(silverLoanRequestsPath)\n\n  // Create a function, which extracts the currency string from `request_amount` and converts `$` to `USD`.\n  // Register this function as a UDF and call it `get_currency_udf`.\n  val getCurrencyUdf = udf((str:String) => {\n      str match {\n          case null => \"\"\n          case _ => { \n            val currencyStr = str.replaceAll(\"[0-9 ]+\",\"\")\n            currencyStr match {\n              case \"$\" => \"USD\"\n              case _ => currencyStr\n            }\n          }\n      }\n  })\n  \n  // Now that you implemented a UDF, let's see if we can achieve the \n  // same with built-in functions. Create a new DataFrame where you use \n  // the built-in functions for extracting both the `currency` and the `request_amount`.\n  // Call these new columns `raw_price_currency_col` and `price_currency_col`.\n  // Drop the `currency` column when you are done with the extractions.\n  val raw_price_currency_col = regexp_extract(col(\"request_amount\"),\"^([^0-9 ]+)\", 0)\n  val price_currency_col = when(raw_price_currency_col === \"$\", \"USD\").otherwise(raw_price_currency_col).alias(\"currency\")\n  \n  val price_amount_col = regexp_extract(col(\"request_amount\"),\"([0-9]+)$\", 0).cast(\"integer\").alias(\"amount\")\n\n  val finalDF = res.select(col(\"*\"), price_currency_col, price_amount_col).drop(\"request_amount\")\n  \n  // Create a new DataFrame called `finalOK`, which contains those values\n  // where neither the `missing_amount` nor the `banned_investor` columns are true.\n  val finalOK = finalDF.filter(col(\"missing_amount\") === false).filter(col(\"banned_investor\") === false)\n  \n  // Save finalOK as a Delta table to `targetDirectory`.\n  finalOK.write.format(\"delta\").mode(\"overwrite\").save(targetDirectory)\n  \n  // Create a new DataFrame called `finalCheck` containing those values\n  // where either the `missing_amount` or the `banned_investor` columns are true.\n  val finalCheck = finalDF.filter((col(\"missing_amount\") === true) || (col(\"banned_investor\") === true))\n  \n  // Save finalCheck as a Delta table to `manualCheckPath` with overwrite mode and overwrite schema option.\n  finalCheck.write.format(\"delta\").mode(\"overwrite\").save(manualCheckPath)\n\n  // Return the UDF, finalOK and finalCheck in a tuple.\n  return (getCurrencyUdf, finalOK, finalCheck)\n}\n\nval (curr_udf, finalOK, finalCheck) = solution(spark, silverLoanRequestsPath, manualCheckPath, targetDirectory)\n\nfinalOK.show(2)\nfinalCheck.show(2)", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "a63201a9-20ba-4de0-82be-65447deebc38", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "beb6117e-0316-4d66-82eb-a101cf3c3413", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 7, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%md\n<h2><img src=\"https://files.training.databricks.com/images/105/logo_spark_tiny.png\"> Reality Check</h2>\n\nRun the following cell to make sure you are on track:", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "ced307b2-106a-4b6c-bd96-b9ae3df48cfb", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "bfc2fcd1-a01a-48a3-a371-593ec371c718", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 8, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "// ANSWER - Test your solution\nrealityCheck(solution, spark, silverLoanRequestsPath, manualCheckPath, targetDirectory)", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "2090ea2b-0c91-4a17-85ff-8a2e30ace87d", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "07c94b35-1507-488e-b640-5b5126705e25", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 9, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%md\n## ![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) Classroom-Cleanup<br>\n\nRun the **`Classroom-Cleanup`** cell below to remove any artifacts created by this lesson.", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "2d1d40a2-b1cd-4286-b234-ee764f1ec4e7", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "88549277-e12a-4660-8c57-396e23cf4ce4", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 10, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%run ./Includes/Classroom-Cleanup", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "3c74fa4b-3850-40f7-8d77-9bd00a07ab3c", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "d6ff9f96-3998-43a0-b4ed-7f3c638367cf", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 11, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%md\n## <img src=\"https://files.training.databricks.com/images/105/logo_spark_tiny.png\"> Next Steps\n\nStart the next challenge, [Stock Transactions]($./PCF 11S - Stock Transactions)\n", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "31d8818a-9fd5-4bc3-a7f1-07c9daa89628", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "ed46d562-d8aa-4a92-b63d-1705f06c95e0", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 12, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}, {"bindings": {}, "collapsed": false, "command": "%md-sandbox\n&copy; 2020 Databricks, Inc. All rights reserved.<br/>\nApache, Apache Spark, Spark and the Spark logo are trademarks of the <a href=\"http://www.apache.org/\">Apache Software Foundation</a>.<br/>\n<br/>\n<a href=\"https://databricks.com/privacy-policy\">Privacy Policy</a> | <a href=\"https://databricks.com/terms-of-use\">Terms of Use</a> | <a href=\"http://help.databricks.com/\">Support</a>", "commandTitle": "", "commandType": "auto", "commandVersion": 0, "commentThread": [], "commentsVisible": false, "customPlotOptions": {}, "datasetPreviewNameToCmdIdMap": {}, "diffDeletes": [], "diffInserts": [], "displayType": "table", "error": null, "errorSummary": null, "finishTime": 0, "globalVars": {}, "guid": "42f1f847-f831-4e25-bd7f-549ecbba2e44", "height": "auto", "hideCommandCode": false, "hideCommandResult": false, "iPythonMetadata": null, "inputWidgets": {}, "latestUser": "", "latestUserId": null, "nuid": "319ebfc8-b432-42b3-a794-f2969b774ef3", "origId": 0, "parentHierarchy": [], "pivotAggregation": null, "pivotColumns": null, "position": 13, "results": null, "showCommandTitle": false, "startTime": 0, "state": "finished", "streamStates": {}, "submitTime": 0, "subtype": "command", "version": "CommandV1", "width": "auto", "workflows": [], "xColumns": null, "yColumns": null}], "dashboards": [], "globalVars": {}, "guid": "dee2323d-acac-4fc1-848c-fccc00005ec7", "iPythonMetadata": null, "inputWidgets": {}, "language": "scala", "name": "PCF 10S - Loan Requests 2", "origId": 0, "version": "NotebookV1"}